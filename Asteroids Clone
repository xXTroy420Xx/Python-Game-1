import pygame, sys
from pygame.locals import QUIT

#Global Setup 
pygame.init()
WINDOW_WIDTH, WINDOW_HIGHT = 1280,720
display_surface = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HIGHT))
pygame.display.set_caption('Ateroid')
clock = pygame.time.Clock()

#functions
def laser_update(laser_list, speed):
    for rect in laser_list:
        rect.y -= speed;
        if rect.bottom < 0:
            laser_list.remove(rect)



#Ship
ship_surface = pygame.image.load('../sprites/ship.png').convert_alpha()
ship_surface_scaled = pygame.transform.scale(ship_surface,(64,64))
ship_rect = ship_surface_scaled.get_rect(center = (WINDOW_WIDTH/2, WINDOW_HIGHT/2))

#lasers
laser_surface = pygame.image.load('../sprites/lazer.png').convert()
#laser_rect = laser_surface.get_rect(center = (ship_rect.center))
laser_list = []

#background
bg_surface = pygame.image.load('../sprites/space.jpg')

#Disable mouse
pygame.mouse.set_visible(False)

# Game Loop
while True:
    #Close Game Event
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:
                #print("Lasers!")
                laser_rect = laser_surface.get_rect(midbottom = (ship_rect.midtop))
                laser_list.append(laser_rect)
                print(laser_list)
    
    clock.tick(200)

    #Section 1 - Sprites & Surfaces
            #Background, Player, Incomeing Objects, Projectile, Text
    display_surface.fill((0,0,0))
    display_surface.blit(bg_surface,(0,0))
    display_surface.blit(ship_surface_scaled,ship_rect)
    #display_surface.blit(laser_surface,laser_rect)
            
            
    #section 2 - Inputs & Control (Interaction)
            #Movement (Mouse), Buttons (Projectiles)
    ship_rect.center = pygame.mouse.get_pos()
    #laser_rect.center = pygame.mouse.get_pos()
    #ship_rect.y += 1
    
    #Section 3 - Game Logic & Updates (Gameplay)
            #mandatory: Movement Code, List For Asteroids, Iteration, Collisions
            #Score, Lifes, Slits, Audio
    laser_update(laser_list,10)
    for rect in laser_list:
        display_surface.blit(laser_surface,rect)
    

    #Final Visual Update To User
    pygame.display.update()
