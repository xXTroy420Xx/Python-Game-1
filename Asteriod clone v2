import pygame, sys

#Class Definitions
class Ship(pygame.sprite.Sprite):
  def __init__(self,groups):
    super().__init__(groups)
    self.image = pygame.image.load("Sprites/player.png").convert_alpha()
    self.rect = self.image.get_rect(center =(SCREEN_W/2, SCREEN_H/2))

  def movement(self):
    if(self.rect.x >= (SCREEN_W-50)):
      self.rect.x -= 10;
      
    elif(self.rect.x <= 0):
      self.rect.x += 10;
      
    elif(self.rect.y <= 0):
      self.rect.y += 10;
      
    elif(self.rect.y >= (SCREEN_H-50)):
      self.rect.y -= 10
      
    else: 
      current_keys = pygame.key.get_pressed()
      if current_keys[pygame.K_w]:
        self.rect.y += -1
  
      if current_keys[pygame.K_s]:
        self.rect.y += 1
  
  def rotate(self):
    current_keys = pygame.key.get_pressed()
    if current_keys[pygame.K_a]:
        self.rect.x += -1
    if current_keys[pygame.K_d]:
      self.rect.x += 1

  def update(self):
    self.rotate()
    self.movement()

#Game Setup
pygame.init()
pygame.display.set_caption('Asteroid Clone - OOP')
SCREEN_W, SCREEN_H = 1280, 720 
display_surface = pygame.display.set_mode((SCREEN_W, SCREEN_H))
clock = pygame.time.Clock()

#Game Files
background = pygame.image.load("Sprites/background.png").convert()

#Game Sprites
spaceship_group = pygame.sprite.GroupSingle()
ship = Ship(spaceship_group)

#Main Game Loop
while True:
  for event in pygame.event.get():
    if event.type == pygame.QUIT:
      pygame.quit()
      sys.exit()
    
  #Primary Background
  display_surface.blit(background,(0,0))

  #Delta Time - Managing Velocity and FR
  dt = clock.tick() / 1000

  #Updates
  ship.update()
  
  #Draw Call - Sprites
  spaceship_group.draw(display_surface)

	#Draw Call - Final
  pygame.display.update()
